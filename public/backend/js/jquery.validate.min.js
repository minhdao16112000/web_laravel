/ **
 * jQuery Validation Plugin 1.9.0
 *
 * http://bassistance.de/jquery-plugins/jquery-plugin-validation/
 * http://docs.jquery.com/Plugins/Validation
 *
 * Bản quyền (c) 2006 - 2011 JĂ¶rn Zaefferer
 *
 * Được cấp phép kép theo giấy phép MIT và GPL:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 * /
(function (c) {c.extend (c.fn, {validate: function (a) {if (this.length) {var b = c.data (this [0], "validator"); if (b) return b; this.attr ("novalidate", "novalidate"); b = new c.validator (a, this [0]); c.data (this [0], "validator", b); if (b .settings.onsubmit) {a = this.find ("input, button"); a.filter (". hủy"). click (function () {b.cancelSubmit = true}); b.settings.submitHandler && a.filter (": submit"). click (function () {b.submitButton = this}); this.submit (function (d) {function e () {if (b.settings.submitHandler) {if (b.submitButton) var f = c ("<input type = 'hidden' />"). attr ("name",
b.submitButton.name) .val (b.submitButton.value) .appendTo (b.currentForm); b.settings.submitHandler.call (b, b.currentForm); b.submitButton && f.remove (); return false} trả về true} b.settings.debug && d.preventDefault (); if (b.cancelSubmit) {b.cancelSubmit = false; return e ()} if (b.form ()) {if (b.pendRequest) {b.formSubiled = true; return false} return e ()} else {b.focusInvalid (); return false}})} return b} else a && a.debug && window.console && console.warn ("không có gì được chọn, không thể xác thực, không trả lại gì")} , valid: function () {if (c (this [0]). is ("form")) return this.validate (). form ();
else {var a = true, b = c (this [0] .form) .validate (); this.each (function () {a & = b.element (this)}); return a}}, removeAttrs: function (a) {var b = {}, d = this; c.each (a.split (/ \ s /), function (e, f) {b [f] = d.attr (f); d.removeAttr (f)}); return b}, quy tắc: function (a, b) {var d = this [0]; if (a) {var e = c.data (d.form, "validator"). settings, f = e.rules, g = c.validator.staticRules (d); switch (a) {case "add": c.extend (g, c.validator.normalizeRule (b)); f [d.name] = g; if (b.messages) e.messages [d.name] = c.extend (e.messages [d.name], b.messages); break; case "remove": if (! b) {delete f [d.name];
return g} var h = {}; c.each (b.split (/ \ s /), function (j, i) {h [i] = g [i]; delete g [i]}); return h }} d = c.validator.normalizeRules (c.extend ({}, c.validator.metadataRules (d), c.validator.classRules (d), c.validator.attributeRules (d), c.validator.staticRules ( d)), d); if (d.required) {e = d.required; delete d.required; d = c.extend ({Required: e}, d)} return d}}); c.extend ( c.expr [":"], {blank: function (a) {return! c.trim ("" + a.value)}, fill: function (a) {return !! c.trim ("" + a .value)}, bỏ chọn: function (a) {return! a.checked}}); c.validator = function (a,
b) {this.settings = c.extend (true, {}, c.validator.defaults, a); this.currentForm = b; this.init ()}; c.validator.format = function (a, b) {if (đối số.length == 1) hàm trả về () {var d = c.makeArray (đối số); d.unshift (a); return c.validator.format.apply (this, d)}; if (đối số .length> 2 && b.constructor! = Array) b = c.makeArray (các đối số) .slice (1); if (b.constructor! = Array) b = [b]; c.each (b, function (d, e ) {a = a.replace (RegExp ("\\ {" + d + "\\}", "g"), e)}); return a}; c.extend (c.validator, {defaults: {messages : {}, nhóm: {}, quy tắc: {}, errorClass: "error",
validClass: "valid", errorElement: "label", focusInvalid: true, errorContainer: c ([]), errorLabelContainer: c ([]), onsubmit: true, ignore: ": hidden", ignoreTitle: false, onfocusin: function (a) {this.lastActive = a; if (this.settings.focusCleanup &&! this.blockFocusCleanup) {this.settings.unhighlight && this.settings.unhighlight.call (this, a, this.settings.errorClass, this.settings.validClass ); this.addWrapper (this.errorsFor (a)). hide ()}}, onfocusout: function (a) {if (! this.checkable (a) && (a.name in this.subiled ||! this. tùy chọn (a))) this.element (a)},
onkeyup: function (a) {if (a.name in this.subpend || a == this.lastElement) this.element (a)}, onclick: function (a) {if (a.name in this.submiss) this.element (a); else a.parentNode.name trong this.subiled && this.element (a.parentNode)}, highlight: function (a, b, d) {a.type === "radio"? this.findByName (a.name) .addClass (b) .removeClass (d): c (a) .addClass (b) .removeClass (d)}, unhighlight: function (a, b, d) {a.type === " radio "? this.findByName (a.name) .removeClass (b) .addClass (d): c (a) .removeClass (b) .addClass (d)}}, setDefaults: function (a) {c.extend ( c.validator.defaults,
a)}, thư: {Required: "Trường này là bắt buộc.", remote: "Vui lòng sửa trường này.", email: "Vui lòng nhập địa chỉ email hợp lệ.", url: "Vui lòng nhập URL hợp lệ.", date: "Vui lòng nhập ngày hợp lệ.", dateISO: "Vui lòng nhập ngày hợp lệ (ISO).", số: "Vui lòng nhập số hợp lệ.", chữ số: "Vui lòng chỉ nhập chữ số.", credititcard: "Vui lòng nhập số thẻ tín dụng hợp lệ. ", bằng. Để:" Vui lòng nhập lại cùng giá trị. ", chấp nhận:" Vui lòng nhập giá trị có phần mở rộng hợp lệ. ", maxlength: c.validator.format (" Vui lòng nhập không quá { 0} ký tự. "),
minlength: c.validator.format ("Vui lòng nhập ít nhất {0} ký tự."), rangelength: c.validator.format ("Vui lòng nhập giá trị dài từ {0} đến {1} ký tự."), dải ô: c.validator.format ("Vui lòng nhập giá trị từ {0} đến {1}."), max: c.validator.format ("Vui lòng nhập giá trị nhỏ hơn hoặc bằng {0}."), tối thiểu: c.validator.format ("Vui lòng nhập giá trị lớn hơn hoặc bằng {0}.")}, autoCreateRanges: false, prototype: {init: function () {function a (e) {var f = c.data ( this [0] .form, "validator"), g = "on" + e.type.replace (/ ^ validate /,
""); f.settings [g] && f.settings [g] .call (f, this [0], e)} this.labelContainer = c (this.settings.errorLabelContainer); this.errorContext = this.labelContainer. length && this.labelContainer || c (this.currentForm); this.containers = c (this.settings.errorContainer) .add (this.settings.errorLabelContainer); this.subpend = {}; this.valueCache = {}; this. pendingRequest = 0; this.pend = {}; this.invalid = {}; this.reset (); var b = this.groups = {}; c.each (this.settings.groups, function (e, f) {c.each (f.split (/ \ s /), function (g, h) {b [h] = e})}); var d =
this.settings.rules; c.each (d, function (e, f) {d [e] = c.validator.normalizeRule (f)}); c (this.currentForm) .validateDelegate ("[type = 'text '], [type =' password '], [type =' file '], select, textarea, [type =' number '], [type =' search '], [type =' tel '], [type = 'url'], [type = 'email'], [type = 'datetime'], [type = 'date'], [type = 'month'], [type = 'week'], [type = 'time '], [type =' datetime-local '], [type =' range '], [type =' color '] "," keyup tiêu điểm focusin ", a) .validateDelegate (" [type =' radio '], [type = 'checkbox'], select, option "," click ",
a); this.settings.invalidHandler && c (this.currentForm) .bind ("không hợp lệ-form.validate", this.settings.invalidHandler)}, form: function () {this.checkForm (); c.extend (this. đã gửi, this.errorMap); this.invalid = c.extend ({}, this.errorMap); this.valid () || c (this.currentForm) .triggerHandler ("dạng không hợp lệ", [this]); this.showErrors (); return this.valid ()}, checkForm: function () {this.prepareForm (); for (var a = 0, b = this.currentElements = this.elements (); b [a]; a ++) this.check (b [a]); return this.valid ()}, element: function (a) {this.lastElement =
a = this.validationTargetFor (this.clean (a)); this.prepareElement (a); this.currentElements = c (a); var b = this.check (a); if (b) xóa this.invalid [a .name]; else this.invalid [a.name] = true; if (! this.numberOfInvalids ()) this.toHide = this.toHide.add (this.containers); this.showErrors (); return b}, showErrors: function (a) {if (a) {c.extend (this.errorMap, a); this.errorList = []; for (var b in a) this.errorList.push ({message: a [b] , element: this.findByName (b) [0]}); this.successList = c.grep (this.successList, function (d) {return! (d.name in a)})} this.settings.showErrors?
this.settings.showErrors.call (this, this.errorMap, this.errorList): this.defaultShowErrors ()}, resetForm: function () {c.fn.resetForm && c (this.currentForm) .resetForm (); this.subcribe = {}; this.lastElement = null; this.prepareForm (); this.hideErrors (); this.elements (). removeClass (this.settings.errorClass)}, numberOfInvalids: function () {return this.objectLength (this .invalid)}, objectLength: function (a) {var b = 0, d; for (d in a) b ++; return b}, hideErrors: function () {this.addWrapper (this.toHide) .hide ()} , hợp lệ: function () {return this.size () ==
0}, size: function () {return this.errorList.length}, focusInvalid: function () {if (this.settings.focusInvalid) try {c (this.findLastActive () || this.errorList.length && this.errorList [ 0] .element || []). Filter (": display"). Focus (). Trigger ("focusin")} catch (a) {}}, findLastActive: function () {var a = this.lastActive; return a && c.grep (this.errorList, function (b) {return b.element.name == a.name}). length == 1 && a}, Elements: function () {var a = this, b = {}; return c (this.currentForm) .find ("input, select, textarea"). not (": submit,: reset,: image, [disable]"). not (this.settings.ignore) .filter (function ( ) {! this.name &&
a.settings.debug && window.console && console.error ("% o chưa được gán tên", this); if (this.name in b ||! a.objectLength (c (this) .rules ())) return false; return b [this.name] = true})}, clean: function (a) {return c (a) [0]}, error: function () {return c (this.settings.errorElement + "." + this.settings .errorClass, this.errorContext)}, đặt lại: function () {this.successList = []; this.errorList = []; this.errorMap = {}; this.toShow = c ([]); this.toHide = c ([]); this.currentElements = c ([])}, chuẩn bị: function () {this.reset (); this.toHide = this.errors (). add (this.containers)},
standardElement: function (a) {this.reset (); this.toHide = this.errorsFor (a)}, hãy kiểm tra: function (a) {a = this.validationTargetFor (this.clean (a)); var b = c (a) .rules (), d = false, e; for (e in b) {var f = {method: e, parameter: b [e]}; try {var g = c.validator.methods [e] .call (this, a.value.replace (/ \ r / g, ""), a, f.parameters); if (g == "dependency-mismatch") d = true; else {d = false; if (g == "pending") {this.toHide = this.toHide.not (this.errorsFor (a)); return} if (! g) {this.formatAndAdd (a, f); return false}}} bắt (h) {this.settings.debug && window.console && console.log ("đã xảy ra ngoại lệ khi kiểm tra phần tử" +
a.id + ", kiểm tra phương thức '" + f.method + "", h); ném h;}} if (! d) {this.objectLength (b) && this.successList.push (a); return true} }, customMetaMessage: function (a, b) {if (c.metadata) {var d = this.settings.meta? c (a) .metadata () [this.settings.meta]: c (a) .metadata ( ); return d && d.messages && d.messages [b]}}, customMessage: function (a, b) {var d = this.settings.messages [a]; return d && (d.constructor == String? d: d [b ])}, findDefined: function () {for (var a = 0; a <objects.length; a ++) if (objects [a]! == undefined) trả về đối số [a]}, defaultMessage: function (a,
b) {return this.findDefined (this.customMessage (a.name, b), this.customMetaMessage (a, b),! this.settings.ignoreTitle && a.title || undefined, c.validator.messages [b], " <strong> Cảnh báo: Không có thông báo nào được xác định cho "+ a.name +" </strong> ")}, formatAndAdd: function (a, b) {var d = this.defaultMessage (a, b.method), e = / \ $? \ {(\ d +) \} / g; if (typeof d == "function") d = d.call (this, b.parameters, a); else if (e.test (d)) d = jQuery.format (d.replace (e, "{$ 1}"), b.parameters); this.errorList.push ({message: d, element: a}); this.errorMap [a.name] = d; this.subiled [a.name] =
d}, addWrapper: function (a) {if (this.settings.wrapper) a = a.add (a.parent (this.settings.wrapper)); return a}, defaultShowErrors: function () {for (var a = 0; this.errorList [a]; a ++) {var b = this.errorList [a]; this.settings.highlight && this.settings.highlight.call (this, b.element, this.settings.errorClass, this.settings .validClass); this.showLabel (b.element, b.message)} if (this.errorList.length) this.toShow = this.toShow.add (this.containers); if (this.settings.success) cho ( a = 0; this.successList [a]; a ++) this.showLabel (this.successList [a]);
if (this.settings.unhighlight) {a = 0; for (b = this.validElements (); b [a]; a ++) this.settings.unhighlight.call (this, b [a], this.settings.errorClass , this.settings.validClass)} this.toHide = this.toHide.not (this.toShow); this.hideErrors (); this.addWrapper (this.toShow) .show ()}, validElements: function () {return this.currentElements.not (this.invalidElements ())}, không hợp lệ: function () {return c (this.errorList) .map (function () {return this.element})}, showLabel: function (a, b) {var d = this.errorsFor (a); if (d.length) {d.removeClass (this.settings.validClass) .addClass (this.settings.errorClass);
d.attr ("created") && d.html (b)} else {d = c ("<" + this.settings.errorElement + "/>"). attr ({"for": this.idOrName (a), tạo: true}). addClass (this.settings.errorClass) .html (b || ""); if (this.settings.wrapper) d = d.hide (). show (). wrap ("<" + this.settings.wrapper + "/>"). parent (); this.labelContainer.append (d) .length || (this.settings.errorPlacement? this.settings.errorPlacement (d, c (a)): d. insertAfter (a))} if (! b && this.settings.success) {d.text (""); typeof this.settings.success == "string"? d.addClass (this.settings.success): this.settings .success (d)} this.toShow =
this.toShow.add (d)}, errorFor: function (a) {var b = this.idOrName (a); return this.errors (). filter (function () {return c (this) .attr ("for ") == b})}, idOrName: function (a) {return this.groups [a.name] || (this.checkable (a)? a.name: a.id || a.name)}, validationTargetFor: function (a) {if (this.checkable (a)) a = this.findByName (a.name) .not (this.settings.ignore) [0]; return a}, checkable: function (a) { return / radio | checkbox / i.test (a.type)}, findByName: function (a) {var b = this.currentForm; return c (document.getElementsByName (a)). map (function (d,
e) {return e.form == b && e.name == a && e || null})}, getLength: function (a, b) {switch (b.nodeName.toLowerCase ()) {case "select": return c ( "option: đã chọn", b) .length; case "input": if (this.checkable (b)) return this.findByName (b.name) .filter (": check"). length} return a.length} , depend: function (a, b) {return this.dependTypes [typeof a]? this.dependTypes [typeof a] (a, b): true}, dependTypes: {"boolean": function (a) {return a} , string: function (a, b) {return !! c (a, b.form) .length}, "function": function (a, b) {return a (b)}}, option: function (a) {return! c.validator.methods.required.call (cái này,
c.trim (a.value), a) && "dependency-mismatch"}, startRequest: function (a) {if (! this.pend [a.name]) {this. muingRequest ++; this.pend [a.name ] = true}}, stopRequest: function (a, b) {this.pendRequest -; if (this.pendRequest <0) this.pendRequest = 0; xóa this.pend [a.name]; if (b && this.pendRequest == 0 && this.formSubiled && this.form ()) {c (this.currentForm) .submit (); this.formSubiled = false} else if (! B && this.pendRequest == 0 && this.formSubiled) {c (this.currentForm) .triggerHandler ("không hợp lệ-hình thức", [this]); this.formSubiled =
false}}, beforeValue: function (a) {return c.data (a, "beforeValue") || c.data (a, "beforeValue", {old: null, valid: true, message: this.defaultMessage (a , "remote")})}}, classRuleSettings: {required: {Required: true}, email: {email: true}, url: {url: true}, date: {date: true}, dateISO: {dateISO: true}, dateDE: {dateDE: true}, number: {number: true}, numberDE: {numberDE: true}, digit: {digit: true}, creditcard: {creditcard: true}}, addClassRules: function (a, b) {a.constructor == String? this.classRuleSettings [a] = b: c.extend (this.classRuleSettings,
a)}, classRules: function (a) {var b = {}; (a = c (a) .attr ("class")) && c.each (a.split (""), function () {this in c.validator.classRuleSettings && c.extend (b, c.validator.classRuleSettings [this])}); return b}, thuộc tínhRules: function (a) {var b = {}; a = c (a); for (var d trong c.validator.methods) {var e; if (e = d === "Required" && typeof c.fn.prop === "function"? a.prop (d): a.attr (d)) b [d] = e; else if (a [0] .getAttribute ("type") === d) b [d] = true} b.maxlength && / - 1 | 2147483647 | 524288 / .test (b.maxlength) && xóa b.maxlength; return b}, metadataRules: function (a) {if (! c.metadata) return {};
var b = c.data (a.form, "validator"). settings.meta; return b? c (a) .metadata () [b]: c (a) .metadata ()}, staticRules: function (a ) {var b = {}, d = c.data (a.form, "validator"); if (d.settings.rules) b = c.validator.normalizeRule (d.settings.rules [a.name]) || {}; return b}, normalizeRules: function (a, b) {c.each (a, function (d, e) {if (e === false) delete a [d]; else if (e. param || e.depends) {var f = true; switch (typeof e.depends) {case "string": f = !! c (e.depends, b.form) .length; break; case "function": f = e.depends.call (b, b)} if (f) a [d] = e.param! == không xác định?
e.param: true; else delete a [d]}}); c.each (a, function (d, e) {a [d] = c.isFunction (e)? e (b): e}); c.each (["minlength", "maxlength", "min", "max"], function () {if (a [this]) a [this] = Number (a [this])}); c. each (["rangelength", "range"], function () {if (a [this]) a [this] = [Number (a [this] [0]), Number (a [this] [1]) ]}); if (c.validator.autoCreateRanges) {if (a.min && a.max) {a.range = [a.min, a.max]; delete a.min; delete a.max} if (a. minlength && a.maxlength) {a.rangelength = [a.minlength, a.maxlength]; delete a.minlength; delete a.maxlength}} a.messages && delete a.messages;
return a}, normalizeRule: function (a) {if (typeof a == "string") {var b = {}; c.each (a.split (/ \ s /), function () {b [this] = true}); a = b} return a}, addMethod: function (a, b, d) {c.validator.methods [a] = b; c.validator.messages [a] = d! = undefined? d : c.validator.messages [a]; b.length <3 && c.validator.addClassRules (a, c.validator.normalizeRule (a))}, các phương thức: {required: function (a, b, d) {if (! this.depend (d, b)) return "dependency-mismatch"; switch (b.nodeName.toLowerCase ()) {case "select": return (a = c (b) .val ()) && a.length> 0 ; case "input": if (this.checkable (b)) return this.getLength (a,
b)> 0; default: return c.trim (a) .length> 0}}, remote: function (a, b, d) {if (this.optional (b)) return "dependency-mismatch"; var e = this.previousValue (b); this.settings.messages [b.name] || (this.settings.messages [b.name] = {}); e.originalMessage = this.settings.messages [b.name] .remote; this.settings.messages [b.name] .remote = e.message; d = typeof d == "string" && {url: d} || d; if (this.pend [b.name]) trả về "đang chờ xử lý"; if (e.old === a) trả về e.valid; e.old = a; var f = this; this.startRequest (b); var g = {}; g [b.name] = a; c.ajax (c.extend (true, {url: d,
mode: "abort", port: "validate" + b.name, dataType: "json", data: g, success: function (h) {f.settings.messages [b.name] .remote = e.originalMessage; var j = h === true; if (j) {var i = f.formSubiled; f.prepareElement (b); f.formSubiled = i; f.successList.push (b); f.showErrors ()} else {i = {}; h = h || f.defaultMessage (b, "remote"); i [b.name] = e.message = c.isFunction (h)? h (a): h; f.showErrors (i)} e.valid = j; f.stopRequest (b, j)}}, d)); return "pending"}, minlength: function (a, b, d) {return this.optional (b) | | this.getLength (c.trim (a), b)> = d}, maxlength: function (a,
b, d) {return this.optional (b) || this.getLength (c.trim (a), b) <= d}, rangelength: function (a, b, d) {a = this.getLength (c .trim (a), b); return this.optional (b) || a> = d [0] && a <= d [1]}, min: function (a, b, d) {return this.optional ( b) || a> = d}, max: function (a, b, d) {return this.optional (b) || a <= d}, range: function (a, b, d) {return this. option (b) || a> = d [0] && a <= d [1]}, email: function (a, b) {return this.optional (b) || / ^ ((([az] | \ d | [! # \ $% & '\ * \ + \ - \ / = \? \ ^ _ `{\ |} ~] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) + (\. ([az] | \ d | [! # \ $% & '\ * \ + \ - \ / = \? \ ^ _ `{\ |} ~] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) +) *) | ((\ x22) ((((\ x20 | \ x09) * (\ x0d \ x0a))? (\ x20 | \ x09) +)? (([\ x01- \ x08 \ x0b \ x0c \ x0e- \ x1f \ x7f] | \ x21 | [\ x23- \ x5b] | [\ x5d- \ x7e] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) | (\\ ([\ x01- \ x09 \ x0b \ x0c \ x0d- \ x7f] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF])))) * (((\ x20 | \ x09) * (\ x0d \ x0a))? ( \ x20 | \ x09) +)? (\ x22))) @ ((([az] | \ d | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) | (([az] | \ d | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) ([az] | \ d | - | \. | _ | ~ | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) * ([az] | \ d | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]))) \.) + (([az] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) | (([az] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) ([az] | \ d | - | \ . | _ | ~ | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) * ([az] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]))) $ / i.test (a)},
url: function (a, b) {return this.optional (b) || / ^ (https? | ftp): \ / \ / (((([az] | \ d | - | \. | _ | ~ | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) | (% [\ da-f] {2}) | [! \ $ & '\ (\) \ * \ +,; = ] |:) * @)? (((\ d | [1-9] \ d | 1 \ d \ d | 2 [0-4] \ d | 25 [0-5]) \. (\ d | [1-9] \ d | 1 \ d \ d | 2 [0-4] \ d | 25 [0-5]) \. (\ D | [1-9] \ d | 1 \ d \ d | 2 [0-4] \ d | 25 [0-5]) \. (\ D | [1-9] \ d | 1 \ d \ d | 2 [0-4] \ d | 25 [0-5 ])) | ((([az] | \ d | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) | (([az] | \ d | [\ u00A0- \ uD7FF \ uF900 - \ uFDCF \ uFDF0- \ uFFEF]) ([az] | \ d | - | \. | _ | ~ | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) * ([az] | \ d | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]))) \.) + (([az] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF ]) | (([az] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) ([az] | \ d | - | \. | _ | ~ | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) * ([az] | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]))) \.?) (: \ d *)?) (\ / ((([az] | \ d | - | \.| _ | ~ | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) | (% [\ da-f] {2}) | [! \ $ & '\ (\) \ * \ +,; =] |: | @) + (\ / (([az] | \ d | - | \. | _ | ~ | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) | (% [\ da-f] {2}) | [! \ $ & '\ (\) \ * \ +,; =] |: | @) *) *)?)? (\? ((( [az] | \ d | - | \. | _ | ~ | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) | (% [\ da-f] {2}) | [! \ $ & '\ (\) \ * \ +,; =] |: | @) | [\ uE000- \ uF8FF] | \ / | \?) *)? (\ # ((([az] | \ d | - | \. | _ | ~ | [\ u00A0- \ uD7FF \ uF900- \ uFDCF \ uFDF0- \ uFFEF]) | (% [\ da-f] {2}) | [! \ $ & '\ (\) \ * \ +,; =] |: | @) | \ / | \?) *)? $ / i.test (a)},\ $ & '\ (\) \ * \ +,; =] |: | @) | \ / | \?) *)? $ / i.test (a)},\ $ & '\ (\) \ * \ +,; =] |: | @) | \ / | \?) *)? $ / i.test (a)},
date: function (a, b) {return this.optional (b) ||! / Invalid | NaN / .test (new Date (a))}, dateISO: function (a, b) {return this.optional (b ) || / ^ \ d {4} [\ / -] \ d {1,2} [\ / -] \ d {1,2} $ /. test (a)}, number: function (a, b ) {return this.optional (b) || / ^ -? (?: \ d + | \ d {1,3} (?:, \ d {3}) +) (?: \. \ d +)? $ /.test(a)},digits: Chức năng(a,b){urn this.optional (b) || / ^ \ d + $ /. test (a)}, credititcard: function (a, b) {if ( this.optional (b)) return "dependency-mismatch"; if (/ [^ 0-9 -] + /. test (a)) return false; var d = 0, e = 0, f = false; a = a.replace (/ \ D / g, ""); for (var g = a.length-1; g> =
0; g -) {e = a.charAt (g); e = parseInt (e, 10); if (f) if ((e * = 2)> 9) e- = 9; d + = e; f =! f} return d% 10 == 0}, accept: function (a, b, d) {d = typeof d == "string"? d.replace (/, / g, "|"): "png | jpe? g | gif "; return this.optional (b) || a.match (RegExp (". ("+ d +") $ "," i "))}, bằngTo: function (a, b, d ) {d = c (d) .unbind (". validate-equalTo"). bind ("fade.validate-equalTo", function () {c (b) .valid ()}); return a == d. val ()}}}); c.format = c.validator.format}) (jQuery);
(function (c) {var a = {}; if (c.ajaxPrefilter) c.ajaxPrefilter (function (d, e, f) {e = d.port; if (d.mode == "abort") {a [e] && a [e] .abort (); a [e] = f}}); else {var b = c.ajax; c.ajax = function (d) {var e = ("port" trong d? d: c.ajaxSettings) .port; if (("mode" trong d? d: c.ajaxSettings) .mode == "abort") {a [e] && a [e] .abort (); return a [e ] = b.apply (this, các đối số)} return b.apply (this, các đối số)}}}) (jQuery);
(function (c) {! jQuery.event.special.focusin &&! jQuery.event.special.focusout && document.addEventListener && c.each ({focus: "focusin", dim: "focusout"}, function (a, b) {function d (e) {e = c.event.fix (e); e.type = b; return c.event.handle.call (this, e)} c.event.special [b] = {setup: function () {this.addEventListener (a, d, true)}, teardown: function () {this.removeEventListener (a, d, true)}, handler: function (e) {objects [0] = c.event.fix (e ); đối số [0] .type = b; return c.event.handle.apply (this, đối số)}}}); c.extend (c.fn, {validateDelegate: function (a,
b, d) {return this.bind (b, function (e) {var f = c (e.target); if (f.is (a)) return d.apply (f, đối số)})}}) }) (jQuery);